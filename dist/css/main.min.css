.wrapper{margin:0 auto;width:80%;max-width:1300px}.wrapper-small{margin:0 auto;width:80%;max-width:950px}.section-padding{padding:6rem 0}.title{text-align:center;font-weight:400;font-size:3rem;text-transform:uppercase;margin-bottom:2rem}.title-three{font-size:2.2rem;margin-bottom:1rem}.text{font-size:1.8rem}.book-btn{padding:.7em 1em;background-color:#0d0d0d;color:#fff;border:2px solid #0d0d0d;font-weight:500;transition:background-color .3s ease,color .3s ease;letter-spacing:1px;font-size:2rem}.book-btn:hover{background-color:transparent;color:#0d0d0d}*,:after,:before{box-sizing:border-box;margin:0;padding:0;text-decoration:none}html{font-size:62.5%;scroll-behavior:smooth}body{font-size:1.8rem;color:#0d0d0d;background-color:#fff;font-family:Plus Jakarta Sans,sans-serif;overflow-x:hidden}.nav-desktop{display:none}.nav{position:fixed;background-color:#fff;height:100px;width:100%;box-shadow:0 8px 24px hsla(210,8%,62%,.2)}.nav__logo-link{padding:.5em}.nav__logo-link img{height:40px}.nav__box{justify-content:space-between;align-items:center;margin:0 auto;width:80%;height:100%}.nav__box,.nav__list{display:flex;background-color:#fff}.nav__list{flex-direction:column;width:100%;height:100vh;list-style-type:none;transform:translateX(100%);transition:transform .3s ease;font-size:2rem}.nav__list--active{transform:translateX(0)}.nav__list-item-link{height:auto;text-align:center;color:#000;text-decoration:none;display:block;padding:3rem 0;width:100%;transition:color .3s ease}.nav__list-item-link:hover{color:red}.nav-margin{height:100px}.header{height:calc(100vh - 100px);background-position:50%;background-size:cover;background-image:linear-gradient(45deg,rgba(0,0,0,.1),rgba(0,0,0,.1)),url(../img/header-small.jpg)}.header .header__box{display:flex;flex-direction:column;justify-content:center;align-items:flex-start;height:100%}.header__heading{color:#0d0d0d;font-size:4rem}.header__text{color:#0d0d0d;margin:.5em 0 1em;font-size:2rem}.about-us__wrapper{display:flex;flex-direction:column;align-items:center}.about-us__img{width:100%}.about-us__box{margin-top:2rem}.offer__list{display:flex;flex-direction:column;list-style-type:none}.offer__list-item{margin-bottom:1.5em}.offer__list-item-pricing{display:flex;align-items:flex-end}.offer__list-item-title-four{padding-right:.5em;text-transform:uppercase;font-size:2rem}.offer__list-item-border{border-bottom:1px solid #0d0d0d;width:100%;height:100%}.offer__list-item-price{height:100%;padding-left:.5em;font-weight:700;font-size:2rem}.offer__list-item-text{padding:.5em 0}@media (min-width:768px){.title{font-size:3.5rem}.title-three{font-size:3rem}.text{font-size:2rem}.header{background-position:50%;background-size:cover;background-image:linear-gradient(45deg,rgba(0,0,0,.1),rgba(0,0,0,.1)),url(../img/header-big.jpg)}.header__heading{font-size:5.5rem}.offer__list-item-price,.offer__list-item-title-four{font-size:2.5rem}}@media (min-width:1200px){.nav-mobile{display:none}.nav-desktop{display:block}.nav__box{justify-content:space-between}.nav__list{flex-direction:row;width:auto;height:auto;transform:translateX(0)}.nav__list-item-link{padding:3rem}}@media (min-width:992px){.title{font-size:4rem;margin-bottom:6rem}.about-us__wrapper{display:flex;flex-direction:row;align-items:flex-start}.about-us__img{width:45%;margin-right:7rem;height:-moz-fit-content;height:fit-content}.about-us__box{margin:0;width:55%}.about-us__box-text{line-height:160%}.offer__list{flex-direction:row;flex-wrap:wrap;justify-content:space-between}.offer__list-item{margin:1em .5em;width:45%}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
